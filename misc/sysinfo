#!/bin/sh
# $Id: sysinfo,v 1.3 1999/04/18 14:13:05 braun Exp $
#
# $Log: sysinfo,v $
# Revision 1.3  1999/04/18 14:13:05  braun
# *** empty log message ***
#
# Revision 1.2  1998/12/30 16:23:54  braun
# splitted some tables into rosw.
#
# Revision 1.1  1998/12/30 15:40:46  braun
# Initial revision
#
#
#
#set -x
SCRIPT=`basename $0`
IDENT=$SCRIPT
#
TITLE="System info for [`uname -a`]"
#-------------------------------
info()
{
   logger -s -t "${SCRIPT}[$$]" $1
   echo "${SCRIPT}[$$]" $1 1>&2
}
warning()
{
   logger -s -p user.warn -t "${SCRIPT}[$$]" "WARNING: $1"
   echo "${SCRIPT}[$$]" "WARNING: $1" 1>&2
}
error()
{
   logger -s -p user.err -t "${SCRIPT}[$$]" "ERROR: $1" 
   echo "${SCRIPT}[$$]" "ERROR: $1" 1>&2
}
#
#--------------------------------------------
# MAIN
#-----
cat << __HEADER__
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<HTML>
<HEAD>
<TITLE>$TITLE</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<H1>$TITLE</H1>
<HR>
__HEADER__
#--------------------------------------------------
echo "<H2>PCI Devices <tt><font color=\"#FF0000\"><font size=-1>/proc/pci</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC">"
_ROW_=false
cat /proc/pci | ( while read LINE
do 
  case $LINE in
    PCI*)	# suppres this line
       ;;
    Bus*)	if [ "$_ROW_" = "false" ]
    		then
    		   echo "<TR><TD><PRE>${LINE}"
    		   _ROW_=true
    		else
    		   echo "</PRE></TD></TR>"
    		   echo "<TR><TD><PRE>${LINE}"
    		   _ROW_=true
    		fi
       ;;
    *)		echo "${LINE}"
      ;;
  esac
done)
  

echo "</PRE></TD></TR></TABLE>"
echo "<HR>"
#--------------------------------------------------
echo "<H2>Interrupts <tt><font color=\"#FF0000\"><font size=-1>/proc/interrupts</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /proc/interrupts
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>DMA <tt><font color=\"#FF0000\"><font size=-1>/proc/dma</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /proc/dma
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>Portaddresses <tt><font color=\"#FF0000\"><font size=-1>/proc/ioports</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /proc/ioports
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>Memory <tt><font color=\"#FF0000\"><font size=-1>/proc/meminfo</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /proc/meminfo
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>Devices <tt><font color=\"#FF0000\"><font size=-1>/proc/devices</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /proc/devices
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>CPU Info <tt><font color=\"#FF0000\"><font size=-1>/proc/cpuinfo</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /proc/cpuinfo
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>Network Devices <tt><font color=\"#FF0000\"><font size=-1>/proc/net/dev</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /proc/net/dev
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>Network Interface Configuration <tt><font color=\"#FF0000\"><font size=-1>ifconfig -a</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE>"
_ROW_=false

/sbin/ifconfig -a | ( while read LINE
do
  if [ -n "$LINE" ]
  then
  	if [ "$_ROW_" = "false" ]
    	then
    		   echo "<TR><TD><PRE>${LINE}"
    		   _ROW_=true
    	else
    		   echo "${LINE}"
    	fi
  else
  	if [ "$_ROW_" = "true" ]
  	then
  		echo "</PRE></TD></TR>"
    	    	_ROW_=false
    	fi

  fi
done)
echo "</PRE></TABLE><HR>"
#--------------------------------------------------
echo "<H2>Routing Table <tt><font color=\"#FF0000\"><font size=-1>netstat -r</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
netstat -r
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>SCSI Devices <tt><font color=\"#FF0000\"><font size=-1>/proc/scsi/scsi</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC">"

_ROW_=false
cat /proc/scsi/scsi | ( while read LINE
do 
  case $LINE in
    Attached*)	# suppres this line
       ;;
    Host*)	if [ "$_ROW_" = "false" ]
    		then
    		   echo "<TR><TD><PRE>${LINE}"
    		   _ROW_=true
    		else
    		   echo "</PRE></TD></TR>"
    		   echo "<TR><TD><PRE>${LINE}"
    		   _ROW_=true
    		fi
       ;;
    *)		echo "${LINE}"
      ;;
  esac
done)
  

echo "</PRE></TD></TR></TABLE>"
echo "<HR>"
#--------------------------------------------------
echo "<H2>SCSI Controller</H2>"

CONTROLLER=`find /proc/scsi/ -name 0 -print`
for i in $CONTROLLER
do
 echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE>"
 echo "<TR><TH>$i</TH></TR>"
 echo "<TR><TD><PRE>"
 cat $i
 echo "</PRE></TD></TR></TABLE><HR>"
done
#--------------------------------------------------
echo "<H2>Sound configuration <tt><font color=\"#FF0000\"><font size=-1>/dev/sndstat</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /dev/sndstat
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
DEVICES="/dev/modem \
	/dev/cdrom \
	/dev/mouse \
	/dev/scanner \
	/dev/pilot \
	/dev/ftape
	"
echo "<H2>Symbolic Device Names <tt><font color=\"#FF0000\"><font size=-1>/dev/*</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"


#
for DEVI in $DEVICES
do
  if [ -L "$DEVI" ]
  then
  	file $DEVI
  fi
done
echo "</PRE></TD></TR></TABLE><HR>"
#--------------------------------------------------
echo "<H2>Boot Messages <tt><font color=\"#FF0000\"><font size=-1>/var/log/boot.msg</font></font></tt></H2>"
echo "<TABLE BORDER BGCOLOR="#99FFCC" NOSAVE><TR><TD><PRE>"
cat /var/log/boot.msg
echo "</PRE></TD></TR></TABLE><HR>"


#---------------------------------------------------
cat << __FOOTER__
<HR>
<ADDRESS>Page generated by ${IDENT}  \$Revision: 1.3 $ at `date` </ADDRESS>
</BODY></HTML>
__FOOTER__
#---------------------------------------------------

#
exit 0
#EOF
